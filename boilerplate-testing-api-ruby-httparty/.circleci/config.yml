version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build:
    working_directory: ~/testin_dojo_uai_api # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/ruby:2.6-rc-node # ...with this image as the primary container; this is where all `steps` will run
        environment: # environment variables for primary container
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: circleci-demo-ruby
          RAILS_ENV: test
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v2-

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Store bundle cache
      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Run Cucumber 
          command: |
            bundle exec cucumber
            
      # Save test results for timing analysis
      - store_test_results:
          path: ~/testin_dojo_uai_api/results
      - store_artifacts:
          path: ~/testin_dojo_uai_api/results
workflows:
   version: 2

   all_commits:
       jobs:
           - build:
               filters:
                   branches:
                       ignore:
                           - developer
                           - test
      # See https://circleci.com/docs/2.0/deployment-integrations/ for example deploy configs